version: 2
jobs:
  checkout_code:
    docker:
      - image: circleci/golang:1.9
    working_directory: /go/src/github.com/kubermatic/machine-controller
    steps:
      - checkout
      - save_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /go/src/github.com/kubermatic/machine-controller

  install-dependencies:
    docker:
      - image: circleci/golang:1.9
    working_directory: /go/src/github.com/kubermatic/machine-controller
    steps:
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
      - run: go get -u github.com/golang/dep/cmd/dep
      - run: dep ensure -vendor-only
      - save_cache:
          key: vendor-{{ checksum "Gopkg.lock" }}
          paths:
            - /go/src/github.com/kubermatic/machine-controller/vendor
  test:
    docker:
      - image: docker:stable
    working_directory: /go/src/github.com/kubermatic/machine-controller
    steps:
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: vendor-{{ checksum "Gopkg.lock" }}
      - setup_remote_docker
      - run: apk update && apk add make bash git
      - run: |
          set -e
          docker create -v /go/src/github.com/kubermatic/machine-controller --name vol-container alpine /bin/true
          docker cp . vol-container:/go/src/github.com/kubermatic/machine-controller/
          export USE_VOLUME_CONTAINER=true && make test-unit-nodep

  build:
    docker:
      - image: docker:stable
    working_directory: /go/src/github.com/kubermatic/machine-controller
    steps:
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: vendor-{{ checksum "Gopkg.lock" }}
      - setup_remote_docker
      - run: apk update && apk add make bash git
      - run: |
          set -e
          docker create -v /go/src/github.com/kubermatic/machine-controller --name vol-container alpine /bin/true
          docker cp . vol-container:/go/src/github.com/kubermatic/machine-controller/
          export USE_VOLUME_CONTAINER=true && make machine-controller-nodep
          docker cp vol-container:/go/src/github.com/kubermatic/machine-controller/machine-controller .
      - save_cache:
          key: machine-controller-{{ .Revision }}
          paths:
            - machine-controller
  verify-tool:
    docker:
      - image: docker:stable
    working_directory: /go/src/github.com/kubermatic/machine-controller
    steps:
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: vendor-{{ checksum "Gopkg.lock" }}
      - setup_remote_docker
      - run: apk update && apk add make bash git
      - run: |
          set -e
          docker create -v /go/src/github.com/kubermatic/machine-controller --name vol-container alpine /bin/true
          docker cp . vol-container:/go/src/github.com/kubermatic/machine-controller/
          export USE_VOLUME_CONTAINER=true && cd test/tools/verify && make verify
      - save_cache:
          key: verify-tool-{{ .Revision }}
          paths:
            - test/tools/verify/verify
  end-to-end:
    docker:
      - image: docker:stable
    working_directory: /go/src/github.com/kubermatic/machine-controller
    steps:
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: machine-controller-{{ .Revision }}
      - restore_cache:
          key: verify-tool-{{ .Revision }}
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: apk update && apk add make bash git openssh-client
      - run:
          name: Generate ssh keypair
          command: ssh-keygen -f $HOME/.ssh/id_rsa -P ''
      - run:
          name: Build docker image for terraform
          command: cd test/tools/integration && make terraform-image
      - run:
          name: Create volume container
          command: |
              set -e
              cd test/tools/integration
              docker create -v /opt/hetzner --name vol-container alpine /bin/true
              docker cp . vol-container:/opt/hetzner
      - run:
          name: Create and destroy environment at cloud provider
          command: |
              set -e
              export USE_VOLUME_CONTAINER=true
              terraform plan
              terraform apply
              terraform destroy

  publish:
    docker:
      - image: docker:stable
    working_directory: /go/src/github.com/kubermatic/machine-controller
    steps:
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: machine-controller-{{ .Revision }}
      - setup_remote_docker
      - run: apk update && apk add make bash git
      - run: |
          set -e
          export GIT_TAG=$CIRCLE_TAG
          docker login -u "${DOCKERHUB_USER}" -p "${DOCKERHUB_PASS}"
          make docker-image-nodep

workflows:
  version: 2
  build:
    jobs:
      - checkout_code
      - install-dependencies:
          requires:
            - checkout_code
      - test:
          requires:
            - install-dependencies
      - build:
          requires:
            - install-dependencies
      - verify-tool:
          requires:
            - install-dependencies
      - end-to-end:
          requires:
            - install-dependencies
            - test
            - build
            - verify-tool
      - publish:
          requires:
            - end-to-end
          filters:
            branches:
              only:
                - master
